<?php
class ControllerModuleJustlaunched extends Controller {
	private $error = array(); 

	public function index() {   
		$this->language->load('module/justlaunched');

		$this->document->setTitle($this->language->get('site_title'));

		$this->load->model('setting/setting');

		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) {			
			$this->model_setting_setting->editSetting('justlaunched', $this->request->post);		

			$this->session->data['success'] = $this->language->get('text_success');

			$this->redirect($this->url->link('extension/module', 'token=' . $this->session->data['token'], 'SSL'));
		}

		$this->data['heading_title'] = $this->language->get('heading_title');

		$this->data['text_enabled'] = $this->language->get('text_enabled');
		$this->data['text_disabled'] = $this->language->get('text_disabled');
		$this->data['text_content_top'] = $this->language->get('text_content_top');
		$this->data['text_content_bottom'] = $this->language->get('text_content_bottom');		
		$this->data['text_column_left'] = $this->language->get('text_column_left');
		$this->data['text_column_right'] = $this->language->get('text_column_right');

		$this->data['entry_categories']=$this->language->get('entry_categories');
		$this->data['entry_limit'] = $this->language->get('entry_limit');
		$this->data['entry_image'] = $this->language->get('entry_image');
		$this->data['entry_layout'] = $this->language->get('entry_layout');
		$this->data['entry_position'] = $this->language->get('entry_position');
		$this->data['entry_status'] = $this->language->get('entry_status');
		$this->data['entry_sort_order'] = $this->language->get('entry_sort_order');

		$this->data['button_save'] = $this->language->get('button_save');
		$this->data['button_cancel'] = $this->language->get('button_cancel');
		$this->data['button_add_module'] = $this->language->get('button_add_module');
		$this->data['button_remove'] = $this->language->get('button_remove');
		$this->data['entry_module_heading']=$this->language->get('entry_module_heading');

		if (isset($this->error['warning'])) {
			$this->data['error_warning'] = $this->error['warning'];
		} else {
			$this->data['error_warning'] = '';
		}

		if (isset($this->error['image'])) {
			$this->data['error_image'] = $this->error['image'];
		} else {
			$this->data['error_image'] = array();
		}

		$this->data['breadcrumbs'] = array();

		$this->data['breadcrumbs'][] = array(
			'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),
			'separator' => false
		);

		$this->data['breadcrumbs'][] = array(
			'text'      => $this->language->get('text_module'),
			'href'      => $this->url->link('extension/module', 'token=' . $this->session->data['token'], 'SSL'),
			'separator' => ' :: '
		);

		$this->data['breadcrumbs'][] = array(
			'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('module/justlaunched', 'token=' . $this->session->data['token'], 'SSL'),
			'separator' => ' :: '
		);

		$this->data['action'] = $this->url->link('module/justlaunched', 'token=' . $this->session->data['token'], 'SSL');

		$this->data['cancel'] = $this->url->link('extension/module', 'token=' . $this->session->data['token'], 'SSL');

		$this->data['token'] = $this->session->data['token'];
		if($this->config->get('module_heading')!="")
		{
			$this->data['module_heading']=$this->config->get('module_heading');
		}
		else
		{
			$this->data['module_heading']="Just launched Categories";
		}
		if (isset($this->request->post['justlaunched_category'])) {
			$this->data['justlaunched_category'] = $this->request->post['justlaunched_category'];
		} else {
			$this->data['justlaunched_category'] = $this->config->get('justlaunched_category');
		}	
		$categories=$this->data['justlaunched_category'];
		$this->load->model('catalog/category');
		
		$this->data['categories'] = array();
		if($categories)
		{
			foreach ($categories as $category_id) {
				$category_info = $this->model_catalog_category->getCategory($category_id);
				if ($category_info) {
					$this->data['categories'][] = array(
						'category_id' => $category_info['category_id'],
						'name'       => $category_info['name']
					);
				}
			}
		}
		$this->data['modules'] = array();

		if (isset($this->request->post['justlaunched_module'])) {
			$this->data['modules'] = $this->request->post['justlaunched_module'];
		} elseif ($this->config->get('justlaunched_module')) { 
			$this->data['modules'] = $this->config->get('justlaunched_module');
		}		
		if (isset($this->request->post['onj_textfield'])) {
			$this->data['onj_textfield'] = $this->request->post['onj_textfield'];
		} elseif ($this->config->get('onj_textfield')) { 
			$this->data['onj_textfield'] = $this->config->get('onj_textfield');
		}
		$this->load->model('design/layout');

		$this->data['layouts'] = $this->model_design_layout->getLayouts();

		$this->template = 'module/justlaunched.tpl';
		$this->children = array(
			'common/header',
			'common/footer'
		);

		$this->response->setOutput($this->render());
	}

	protected function validate() {
		if (!$this->user->hasPermission('modify', 'module/justlaunched')) {
			$this->error['warning'] = $this->language->get('error_permission');
		}

		/*if (isset($this->request->post['justlaunched_module'])) {
			foreach ($this->request->post['justlaunched_module'] as $key => $value) {
				if (!$value['image_width'] || !$value['image_height']) {
					$this->error['image'][$key] = $this->language->get('error_image');
				}
			}
		}*/

		if (!$this->error) {
			return true;
		} else {
			return false;
		}	
	}
}
?>